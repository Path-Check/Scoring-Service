syntax="proto2";

package scoring;
option go_package = "scoring/scoringpb";

service ScoringService {
  // Unary
  // Send info on current/previously received exposures that haven't yet resulted in a notification.
  rpc shouldNotify(ExposureNotificationRequest) returns (ExposureNotificationResponse) {}
}

message ExposureNotificationRequest {
  // This is the ExposureSummary we just received which prompted the call to this service.
  optional ExposureSummary exposure_summary = 1;

  // Previously received ExposureSummaries from past 14 days that have not yet
  // caused a notification, in addition to the new ExposureSummary that could.
  repeated ExposureSummary unused_exposure_summaries = 2;
}

message ExposureNotificationResponse {
  // If a notification should be shown to user, it will be based on data in this message.
  // If empty, user gets no notification.
  optional ExposureNotification exposure_notification = 1;
}

// Modeled after
// https://developer.apple.com/documentation/exposurenotification/enexposuredetectionsummary
// but with slightly different fields according to our usage needs.
message ExposureSummary {
  message AttenuationDurations {
    optional int32 low_bucket_duration_seconds = 1;
    optional int32 medium_bucket_duration_seconds = 2;
    optional int32 high_bucket_duration_seconds = 3;
  }

  // Durations of exposure at different levels.
  optional AttenuationDurations attenuation_durations = 1;

  // The number of keys that matched for an exposure detection.
  // Each key corresponds to a single device and day.
  // Available only for Apple scoring version 1 (ENAPIVersion = 1)
  optional int32 matched_key_count = 2;

  // Number of days since the most recent exposure.
  // The values for this property include 0 = today, 1 = yesterday, and so on,
  // relative to day_received.
  optional int32 days_since_last_exposure = 3;

  // The time this ExposureSummary was received, expressed as a UNIX timestamp in
  // seconds. WE MUST KNOW WHICH OTHER EXPOSURE SUMMARIES WERE THIS DAY. I'm thinking
  // maybe just saving the time zone as well.
  // NOTE: It's easy to get this wrong when rounded to a day and dealing with
  // different time zones, and we still have a bug around this in the app, so be
  // careful and make sure to get this right. Let's discuss this more.
  optional int32 time_received = 4;
}

message ExposureNotification {
  // The ExposureSummaries that went into the decision to notify the user of a
  // possible exposure.
  // It is up to the app to potentially request additional information through
  // ExposureInfos that are associated with these summaries, and to determine what
  // exposures to show to the user.
  repeated ExposureSummary exposure_summaries = 1;
}
