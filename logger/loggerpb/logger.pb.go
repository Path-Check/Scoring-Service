// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: logger/loggerpb/logger.proto

package loggerpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	scoringpb "scoring/scoringpb"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserStatus_TestData_TestResult int32

const (
	UserStatus_TestData_POSITIVE UserStatus_TestData_TestResult = 1
	UserStatus_TestData_NEGATIVE UserStatus_TestData_TestResult = 2
)

// Enum value maps for UserStatus_TestData_TestResult.
var (
	UserStatus_TestData_TestResult_name = map[int32]string{
		1: "POSITIVE",
		2: "NEGATIVE",
	}
	UserStatus_TestData_TestResult_value = map[string]int32{
		"POSITIVE": 1,
		"NEGATIVE": 2,
	}
)

func (x UserStatus_TestData_TestResult) Enum() *UserStatus_TestData_TestResult {
	p := new(UserStatus_TestData_TestResult)
	*p = x
	return p
}

func (x UserStatus_TestData_TestResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus_TestData_TestResult) Descriptor() protoreflect.EnumDescriptor {
	return file_logger_loggerpb_logger_proto_enumTypes[0].Descriptor()
}

func (UserStatus_TestData_TestResult) Type() protoreflect.EnumType {
	return &file_logger_loggerpb_logger_proto_enumTypes[0]
}

func (x UserStatus_TestData_TestResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserStatus_TestData_TestResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserStatus_TestData_TestResult(num)
	return nil
}

// Deprecated: Use UserStatus_TestData_TestResult.Descriptor instead.
func (UserStatus_TestData_TestResult) EnumDescriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{1, 0, 0}
}

type LogResponse_Status int32

const (
	LogResponse_UNKNOWN LogResponse_Status = 0
	LogResponse_SUCCESS LogResponse_Status = 1
	LogResponse_FAILURE LogResponse_Status = 2
)

// Enum value maps for LogResponse_Status.
var (
	LogResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "FAILURE",
	}
	LogResponse_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"SUCCESS": 1,
		"FAILURE": 2,
	}
)

func (x LogResponse_Status) Enum() *LogResponse_Status {
	p := new(LogResponse_Status)
	*p = x
	return p
}

func (x LogResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_logger_loggerpb_logger_proto_enumTypes[1].Descriptor()
}

func (LogResponse_Status) Type() protoreflect.EnumType {
	return &file_logger_loggerpb_logger_proto_enumTypes[1]
}

func (x LogResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LogResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LogResponse_Status(num)
	return nil
}

// Deprecated: Use LogResponse_Status.Descriptor instead.
func (LogResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{2, 0}
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exposure notification data occurring in past 14 days. (May be none.)
	ExposureNotifications []*scoringpb.ExposureNotification `protobuf:"bytes,1,rep,name=exposure_notifications,json=exposureNotifications" json:"exposure_notifications,omitempty"`
	// Any ExposureSummaries that have not yet led to a notification.
	UnusedExposureSummaries []*scoringpb.ExposureSummary `protobuf:"bytes,2,rep,name=unused_exposure_summaries,json=unusedExposureSummaries" json:"unused_exposure_summaries,omitempty"`
	// Any (non-PII) data pertaining to the user status.
	UserStatus []*UserStatus `protobuf:"bytes,3,rep,name=user_status,json=userStatus" json:"user_status,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_loggerpb_logger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logger_loggerpb_logger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{0}
}

func (x *LogRequest) GetExposureNotifications() []*scoringpb.ExposureNotification {
	if x != nil {
		return x.ExposureNotifications
	}
	return nil
}

func (x *LogRequest) GetUnusedExposureSummaries() []*scoringpb.ExposureSummary {
	if x != nil {
		return x.UnusedExposureSummaries
	}
	return nil
}

func (x *LogRequest) GetUserStatus() []*UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return nil
}

type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_loggerpb_logger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_logger_loggerpb_logger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{1}
}

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *LogResponse_Status `protobuf:"varint,1,opt,name=status,enum=logger.LogResponse_Status" json:"status,omitempty"`
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_loggerpb_logger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logger_loggerpb_logger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{2}
}

func (x *LogResponse) GetStatus() LogResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return LogResponse_UNKNOWN
}

type UserStatus_TestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// COVID test result.
	TestResult *UserStatus_TestData_TestResult `protobuf:"varint,1,opt,name=test_result,json=testResult,enum=logger.UserStatus_TestData_TestResult" json:"test_result,omitempty"`
	// UNIX timestamp representing the day this test data was entered.
	// Note about date as earlier, make sure to get this right.
	DateEntered *int32 `protobuf:"varint,2,opt,name=date_entered,json=dateEntered" json:"date_entered,omitempty"`
	// Date of COVID test.
	DateOfTest *int32 `protobuf:"varint,3,opt,name=date_of_test,json=dateOfTest" json:"date_of_test,omitempty"`
}

func (x *UserStatus_TestData) Reset() {
	*x = UserStatus_TestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_loggerpb_logger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus_TestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus_TestData) ProtoMessage() {}

func (x *UserStatus_TestData) ProtoReflect() protoreflect.Message {
	mi := &file_logger_loggerpb_logger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus_TestData.ProtoReflect.Descriptor instead.
func (*UserStatus_TestData) Descriptor() ([]byte, []int) {
	return file_logger_loggerpb_logger_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UserStatus_TestData) GetTestResult() UserStatus_TestData_TestResult {
	if x != nil && x.TestResult != nil {
		return *x.TestResult
	}
	return UserStatus_TestData_POSITIVE
}

func (x *UserStatus_TestData) GetDateEntered() int32 {
	if x != nil && x.DateEntered != nil {
		return *x.DateEntered
	}
	return 0
}

func (x *UserStatus_TestData) GetDateOfTest() int32 {
	if x != nil && x.DateOfTest != nil {
		return *x.DateOfTest
	}
	return 0
}

var File_logger_loggerpb_logger_proto protoreflect.FileDescriptor

var file_logger_loggerpb_logger_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x1a, 0x1f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f,
	0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x19,
	0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x17, 0x75, 0x6e, 0x75, 0x73, 0x65,
	0x64, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xc2, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x54, 0x65, 0x73,
	0x74, 0x22, 0x28, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x22, 0x72, 0x0a, 0x0b, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x32,
	0x44, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x70, 0x62,
}

var (
	file_logger_loggerpb_logger_proto_rawDescOnce sync.Once
	file_logger_loggerpb_logger_proto_rawDescData = file_logger_loggerpb_logger_proto_rawDesc
)

func file_logger_loggerpb_logger_proto_rawDescGZIP() []byte {
	file_logger_loggerpb_logger_proto_rawDescOnce.Do(func() {
		file_logger_loggerpb_logger_proto_rawDescData = protoimpl.X.CompressGZIP(file_logger_loggerpb_logger_proto_rawDescData)
	})
	return file_logger_loggerpb_logger_proto_rawDescData
}

var file_logger_loggerpb_logger_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_logger_loggerpb_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_logger_loggerpb_logger_proto_goTypes = []interface{}{
	(UserStatus_TestData_TestResult)(0),    // 0: logger.UserStatus.TestData.TestResult
	(LogResponse_Status)(0),                // 1: logger.LogResponse.Status
	(*LogRequest)(nil),                     // 2: logger.LogRequest
	(*UserStatus)(nil),                     // 3: logger.UserStatus
	(*LogResponse)(nil),                    // 4: logger.LogResponse
	(*UserStatus_TestData)(nil),            // 5: logger.UserStatus.TestData
	(*scoringpb.ExposureNotification)(nil), // 6: scoring.ExposureNotification
	(*scoringpb.ExposureSummary)(nil),      // 7: scoring.ExposureSummary
}
var file_logger_loggerpb_logger_proto_depIdxs = []int32{
	6, // 0: logger.LogRequest.exposure_notifications:type_name -> scoring.ExposureNotification
	7, // 1: logger.LogRequest.unused_exposure_summaries:type_name -> scoring.ExposureSummary
	3, // 2: logger.LogRequest.user_status:type_name -> logger.UserStatus
	1, // 3: logger.LogResponse.status:type_name -> logger.LogResponse.Status
	0, // 4: logger.UserStatus.TestData.test_result:type_name -> logger.UserStatus.TestData.TestResult
	2, // 5: logger.LoggerService.LogEvent:input_type -> logger.LogRequest
	4, // 6: logger.LoggerService.LogEvent:output_type -> logger.LogResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_logger_loggerpb_logger_proto_init() }
func file_logger_loggerpb_logger_proto_init() {
	if File_logger_loggerpb_logger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logger_loggerpb_logger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_loggerpb_logger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_loggerpb_logger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_loggerpb_logger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus_TestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logger_loggerpb_logger_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logger_loggerpb_logger_proto_goTypes,
		DependencyIndexes: file_logger_loggerpb_logger_proto_depIdxs,
		EnumInfos:         file_logger_loggerpb_logger_proto_enumTypes,
		MessageInfos:      file_logger_loggerpb_logger_proto_msgTypes,
	}.Build()
	File_logger_loggerpb_logger_proto = out.File
	file_logger_loggerpb_logger_proto_rawDesc = nil
	file_logger_loggerpb_logger_proto_goTypes = nil
	file_logger_loggerpb_logger_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoggerServiceClient is the client API for LoggerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerServiceClient interface {
	// Unary
	LogEvent(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
}

type loggerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoggerServiceClient(cc grpc.ClientConnInterface) LoggerServiceClient {
	return &loggerServiceClient{cc}
}

func (c *loggerServiceClient) LogEvent(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/logger.LoggerService/LogEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggerServiceServer is the server API for LoggerService service.
type LoggerServiceServer interface {
	// Unary
	LogEvent(context.Context, *LogRequest) (*LogResponse, error)
}

// UnimplementedLoggerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoggerServiceServer struct {
}

func (*UnimplementedLoggerServiceServer) LogEvent(context.Context, *LogRequest) (*LogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogEvent not implemented")
}

func RegisterLoggerServiceServer(s *grpc.Server, srv LoggerServiceServer) {
	s.RegisterService(&_LoggerService_serviceDesc, srv)
}

func _LoggerService_LogEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).LogEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logger.LoggerService/LogEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).LogEvent(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoggerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logger.LoggerService",
	HandlerType: (*LoggerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogEvent",
			Handler:    _LoggerService_LogEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logger/loggerpb/logger.proto",
}
